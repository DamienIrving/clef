run_conda: &run_conda
    docker:
        - image: circleci/python
          environment:
              ARCCSSIVE_DB: postgresql://postgres:@localhost/postgres
              PYTHON_VER: 2.7
              LC_ALL: C.UTF-8
        - image: circleci/postgres:9.6
          environment:
              POSTGRES_USER: postgres
              POSTGRES_DB: postgres
              POSTGRES_PASSWORD: ''
    steps:
        - checkout
        - run:
            name: install-conda
            command: |
                wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O conda.sh
                bash conda.sh -b -p ~/miniconda
        - run:
            name: setup
            command: |
                ~/miniconda/bin/conda install --yes conda-build anaconda-client
                ~/miniconda/bin/conda config --system --add channels conda-forge
                ~/miniconda/bin/conda install postgresql
                ~/miniconda/bin/psql -h localhost -U postgres -f db/nci.sql
                ~/miniconda/bin/psql -h localhost -U postgres -f db/tables.sql
        - run:
            name: build
            command: |
                ~/miniconda/bin/conda build conda --python=${PYTHON_VER}
        - run: 
            name: archive
            command: |
                mkdir /artefacts
                cp $(~/miniconda/bin/conda build conda --python=${PYTHON_VER} --output) /artefacts

        - persist_to_workspace:
            root: /artefacts
            paths: '*'

version: 2
jobs:
    py2:
        environment:
            PYTHON_VER: 2.7
        <<: *run_conda
    py3:
        environment:
            PYTHON_VER: 3
        <<: *run_conda

    publish:
        working_directory: /circleci
        docker:
            - image: scottwales/conda-build
        steps:
            - attach_workspace:
                at: /artefacts

            - run:
                anaconda --token "${ANACONDA_TOKEN}" upload --user "${ANACONDA_USER}" /artefacts/*.tar.bz2

workflows:
    version: 2
    build_and_publsh:
        jobs:
            - py27:
                filters:
                    tags:
                        only: /.*/

            - py3:
                filters:
                    tags:
                        only: /.*/

            - publish:
                requires:
                    - py2
                    - py3
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
